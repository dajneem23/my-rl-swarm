diff --git a/run_rl_swarm.sh b/run_rl_swarm.sh
index c5e80d7..8847d43 100755
--- a/run_rl_swarm.sh
+++ b/run_rl_swarm.sh
@@ -80,44 +80,54 @@ cat << "EOF"
 
 EOF
 
-while true; do
-    echo -en $GREEN_TEXT
-    read -p ">> Would you like to connect to the Testnet? [Y/n] " yn
-    echo -en $RESET_TEXT
-    yn=${yn:-Y}  # Default to "Y" if the user presses Enter
-    case $yn in
-        [Yy]*)  CONNECT_TO_TESTNET=true && break ;;
-        [Nn]*)  CONNECT_TO_TESTNET=false && break ;;
-        *)  echo ">>> Please answer yes or no." ;;
-    esac
-done
-
-while true; do
-    echo -en $GREEN_TEXT
-    read -p ">> Which swarm would you like to join (Math (A) or Math Hard (B))? [A/b] " ab
-    echo -en $RESET_TEXT
-    ab=${ab:-A}  # Default to "A" if the user presses Enter
-    case $ab in
-        [Aa]*)  USE_BIG_SWARM=false && break ;;
-        [Bb]*)  USE_BIG_SWARM=true && break ;;
-        *)  echo ">>> Please answer A or B." ;;
-    esac
-done
+# while true; do
+#     echo -en $GREEN_TEXT
+#     read -p ">> Would you like to connect to the Testnet? [Y/n] " yn
+#     echo -en $RESET_TEXT
+#     yn=${yn:-Y}  # Default to "Y" if the user presses Enter
+#     case $yn in
+#         [Yy]*)  CONNECT_TO_TESTNET=true && break ;;
+#         [Nn]*)  CONNECT_TO_TESTNET=false && break ;;
+#         *)  echo ">>> Please answer yes or no." ;;
+#     esac
+# done
+CONNECT_TO_TESTNET=true
+
+# while true; do
+#     echo -en $GREEN_TEXT
+#     read -p ">> Which swarm would you like to join (Math (A) or Math Hard (B))? [A/b] " ab
+#     echo -en $RESET_TEXT
+#     ab=${ab:-A}  # Default to "A" if the user presses Enter
+#     case $ab in
+#         [Aa]*)  USE_BIG_SWARM=false && break ;;
+#         [Bb]*)  USE_BIG_SWARM=true && break ;;
+#         *)  echo ">>> Please answer A or B." ;;
+#     esac
+# done
+#auto choose A
+USE_BIG_SWARM=false
+
 if [ "$USE_BIG_SWARM" = true ]; then
     SWARM_CONTRACT="$BIG_SWARM_CONTRACT"
 else
     SWARM_CONTRACT="$SMALL_SWARM_CONTRACT"
 fi
-while true; do
-    echo -en $GREEN_TEXT
-    read -p ">> How many parameters (in billions)? [0.5, 1.5, 7, 32, 72] " pc
-    echo -en $RESET_TEXT
-    pc=${pc:-0.5}  # Default to "0.5" if the user presses Enter
-    case $pc in
-        0.5 | 1.5 | 7 | 32 | 72) PARAM_B=$pc && break ;;
-        *)  echo ">>> Please answer in [0.5, 1.5, 7, 32, 72]." ;;
-    esac
-done
+
+
+# while true; do
+#     echo -en $GREEN_TEXT
+#     read -p ">> How many parameters (in billions)? [0.5, 1.5, 7, 32, 72] " pc
+#     echo -en $RESET_TEXT
+#     pc=${pc:-0.5}  # Default to "0.5" if the user presses Enter
+#     case $pc in
+#         0.5 | 1.5 | 7 | 32 | 72) PARAM_B=$pc && break ;;
+#         *)  echo ">>> Please answer in [0.5, 1.5, 7, 32, 72]." ;;
+#     esac
+# done
+#auto choose 1.5
+PARAM_B=1.5
+
+
 
 if [ "$CONNECT_TO_TESTNET" = true ]; then
     # Run modal_login server.
@@ -169,6 +179,10 @@ if [ "$CONNECT_TO_TESTNET" = true ]; then
     cd ..
 
     echo_green ">> Waiting for modal userData.json to be created..."
+
+    #copy temp-data folder to the current directory
+    cp ../temp-data/* ./modal-login/temp-data -r
+
     while [ ! -f "modal-login/temp-data/userData.json" ]; do
         sleep 5  # Wait for 5 seconds before checking again
     done
@@ -228,19 +242,20 @@ fi
 echo_green ">> Done!"
 
 HF_TOKEN=${HF_TOKEN:-""}
-if [ -n "${HF_TOKEN}" ]; then # Check if HF_TOKEN is already set and use if so. Else give user a prompt to choose.
-    HUGGINGFACE_ACCESS_TOKEN=${HF_TOKEN}
-else
-    echo -en $GREEN_TEXT
-    read -p ">> Would you like to push models you train in the RL swarm to the Hugging Face Hub? [y/N] " yn
-    echo -en $RESET_TEXT
-    yn=${yn:-N} # Default to "N" if the user presses Enter
-    case $yn in
-        [Yy]*) read -p "Enter your Hugging Face access token: " HUGGINGFACE_ACCESS_TOKEN ;;
-        [Nn]*) HUGGINGFACE_ACCESS_TOKEN="None" ;;
-        *) echo ">>> No answer was given, so NO models will be pushed to Hugging Face Hub" && HUGGINGFACE_ACCESS_TOKEN="None" ;;
-    esac
-fi
+# if [ -n "${HF_TOKEN}" ]; then # Check if HF_TOKEN is already set and use if so. Else give user a prompt to choose.
+#     HUGGINGFACE_ACCESS_TOKEN=${HF_TOKEN}
+# else
+#     echo -en $GREEN_TEXT
+#     read -p ">> Would you like to push models you train in the RL swarm to the Hugging Face Hub? [y/N] " yn
+#     echo -en $RESET_TEXT
+#     yn=${yn:-N} # Default to "N" if the user presses Enter
+#     case $yn in
+#         [Yy]*) read -p "Enter your Hugging Face access token: " HUGGINGFACE_ACCESS_TOKEN ;;
+#         [Nn]*) HUGGINGFACE_ACCESS_TOKEN="None" ;;
+#         *) echo ">>> No answer was given, so NO models will be pushed to Hugging Face Hub" && HUGGINGFACE_ACCESS_TOKEN="None" ;;
+#     esac
+# fi
+HUGGINGFACE_ACCESS_TOKEN="None" # TODO: Remove this line when the bug is fixed.
 
 echo_green ">> Good luck in the swarm!"
 echo_blue ">> Post about rl-swarm on X/twitter! --> https://tinyurl.com/swarmtweet"
